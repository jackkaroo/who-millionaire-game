{"version":3,"sources":["images/hand.png","components/Button/index.js","components/Page/index.js","containers/StartPage/index.js","components/Answer/index.js","components/Level/index.js","utils/functions.js","components/PlayMenu/index.js","context/context.js","containers/PlayPage/index.js","containers/EndPage/index.js","game/data.js","game/game.js","App.js","index.js"],"names":["Button","text","href","className","type","Page","buttonText","isStart","score","src","hand","alt","StartPage","Answer","el","handleAnswerPressed","isShow","chosenAnswer","answerId","isCorrect","onClick","letter","answerText","Level","x","active","undefined","toString","replace","PlayMenu","data","gain","showMobileMenu","setShowMobileMenu","map","GameContext","React","createContext","PlayPage","useState","setIsShow","setChosenAnswer","question","setQuestion","futureGain","setFutureGain","history","useHistory","game","useContext","id","message","verifyAnswer","setTimeout","push","getCurrentQuestion","getFutureGain","useEffect","startGame","questionText","answers","getAllGainLevels","EndPage","getCurrentGain","Game","_FINAL_LEVEL","Object","keys","length","this","_userLevel","_userGain","_questionsData","_currentQuestion","_generateQuestion","values","reverse","levelId","currentLevelQuestions","questions","Math","floor","random","userAnswerId","answerGain","correctAnswersIdArray","includes","App","Provider","value","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c832568.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/hand.304827ab.png\";","import React from 'react';\r\nimport './index.scss';\r\n\r\nfunction Button({ text, href }) {\r\n  return (\r\n    <a className=\"button\" type=\"submit\" href={href}>\r\n      {text}\r\n    </a>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport hand from '../../images/hand.png';\r\nimport Button from '../Button';\r\n\r\nfunction Page({\r\n  href, buttonText, isStart, score,\r\n}) {\r\n  return (\r\n    <div className={isStart ? 'page_wrapper start' : 'page_wrapper'}>\r\n      <div className=\"page_image\">\r\n        <img src={hand} alt=\"page-hand\" />\r\n      </div>\r\n      <div className=\"page_text\">\r\n        {isStart\r\n          ? <h1 className=\"page_title\">Who wants to be a millionaire?</h1>\r\n          : (\r\n            <div>\r\n              <div className=\"page_subtitle\">Total score:</div>\r\n              <h1 className=\"page_title\">\r\n                $\r\n                {score}\r\n                {' '}\r\n                earned\r\n              </h1>\r\n            </div>\r\n          )}\r\n\r\n        <Button text={buttonText} href={href} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport Page from '../../components/Page';\r\n\r\nfunction StartPage() {\r\n  return (\r\n    <Page href=\"#/game-play\" buttonText=\"Start\" isStart />\r\n  );\r\n}\r\n\r\nexport default StartPage;\r\n","import React from 'react';\r\nimport './index.scss';\r\n\r\nfunction Answer({\r\n  el, handleAnswerPressed, isShow, chosenAnswer,\r\n}) {\r\n  const handleClick = () => {\r\n    handleAnswerPressed(el.answerId);\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <button\r\n        type=\"button\"\r\n        className={\r\n          el.answerId === chosenAnswer && isShow && !el.isCorrect\r\n            ? 'answer_wrapper answer_wrapper-wrong' : (\r\n              el.isCorrect && isShow\r\n                ? 'answer_wrapper answer_wrapper-correct'\r\n                : (\r\n                  el.answerId === chosenAnswer ? 'answer_wrapper answer_wrapper-pressed'\r\n                    : 'answer_wrapper'))\r\n      }\r\n        onClick={!chosenAnswer ? () => handleClick() : null}\r\n      >\r\n        <span>{el.letter}</span>\r\n        {' '}\r\n        {el.answerText}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Answer;\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport numberWithCommas from '../../utils/functions';\r\n\r\nfunction Level({ text, active }) {\r\n  return (\r\n    <div className={\r\n      active\r\n        ? 'level_wrapper level_wrapper-active'\r\n        : (active === undefined\r\n          ? 'level_wrapper level_wrapper-disable'\r\n          : 'level_wrapper')\r\n    }\r\n    >\r\n      $\r\n      {numberWithCommas(text)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Level;\r\n","const numberWithCommas = (x) => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\r\nexport { numberWithCommas as default };\r\n","import React from 'react';\r\nimport './index.scss';\r\nimport * as AiIcons from 'react-icons/ai';\r\nimport Level from '../Level';\r\n\r\nfunction PlayMenu({\r\n  data, gain, showMobileMenu, setShowMobileMenu,\r\n}) {\r\n  return (\r\n    <div className={`play_menu-wrapper play_menu-wrapper-${showMobileMenu}`}>\r\n      <div className=\"play_menu\">\r\n        {\r\n          data\r\n            .map((el) => {\r\n              if (gain > el) {\r\n                return (\r\n                  <Level\r\n                    text={el}\r\n                    key={el}\r\n                  />\r\n                );\r\n              }\r\n              return (\r\n                <Level\r\n                  text={el}\r\n                  key={el}\r\n                  active={gain === el}\r\n                />\r\n              );\r\n            })\r\n        }\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"play_menu-button\"\r\n        onClick={() => setShowMobileMenu(false)}\r\n      >\r\n        <AiIcons.AiOutlineClose />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayMenu;\r\n","import React from 'react';\r\n\r\nconst GameContext = React.createContext();\r\n\r\nexport default GameContext;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport './index.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport Answer from '../../components/Answer';\r\nimport PlayMenu from '../../components/PlayMenu';\r\nimport GameContext from '../../context/context';\r\n\r\nfunction PlayPage() {\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [chosenAnswer, setChosenAnswer] = useState(false);\r\n  const [question, setQuestion] = useState(null);\r\n  const [futureGain, setFutureGain] = useState('');\r\n  const [showMobileMenu, setShowMobileMenu] = useState('');\r\n\r\n  const history = useHistory();\r\n  const game = useContext(GameContext);\r\n\r\n  const showTrueAnswer = () => {\r\n    setTimeout(() => {\r\n      setIsShow(true);\r\n    }, 1000);\r\n  };\r\n\r\n  const showFalseAnswer = () => {\r\n    setTimeout(() => {\r\n      setIsShow(true);\r\n    }, 1000);\r\n  };\r\n\r\n  const handleAnswerPressed = (id) => {\r\n    const message = game.verifyAnswer(id);\r\n    setChosenAnswer(id);\r\n    showTrueAnswer();\r\n    if (message === 'Victory') {\r\n      setTimeout(() => {\r\n        history.push('/game-end');\r\n      }, 3000);\r\n    } else if (message === 'Loose') {\r\n      showFalseAnswer();\r\n      setTimeout(() => {\r\n        history.push('/game-end');\r\n      }, 3000);\r\n    } else {\r\n      setTimeout(() => {\r\n        setIsShow(false);\r\n        setChosenAnswer(false);\r\n        setQuestion(game.getCurrentQuestion());\r\n        setFutureGain(game.getFutureGain());\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    game.startGame();\r\n    setQuestion(game.getCurrentQuestion());\r\n    setFutureGain(game.getFutureGain());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        question\r\n          ? (\r\n            <div className=\"play_wrapper\">\r\n              <div className=\"play_field\">\r\n                <h2 className=\"play_task\">{question.questionText}</h2>\r\n                <div>\r\n                  <div className=\"play_answers\">\r\n                    {\r\n                  question.answers\r\n                    .map((el) => (\r\n                      <Answer\r\n                        el={el}\r\n                        key={el.answerId}\r\n                        handleAnswerPressed={handleAnswerPressed}\r\n                        isShow={isShow}\r\n                        chosenAnswer={chosenAnswer}\r\n                      />\r\n                    ))\r\n                }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                className=\"play_menu_open\"\r\n                onClick={() => setShowMobileMenu(true)}\r\n              >\r\n                <FaIcons.FaBars />\r\n              </button>\r\n              <PlayMenu\r\n                data={game.getAllGainLevels()}\r\n                gain={futureGain}\r\n                showMobileMenu={showMobileMenu ? 'open'\r\n                  : ''}\r\n                setShowMobileMenu={setShowMobileMenu}\r\n              />\r\n            </div>\r\n          )\r\n          : 'Loading..'\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlayPage;\r\n","import React, { useContext } from 'react';\r\nimport Page from '../../components/Page';\r\nimport GameContext from '../../context/context';\r\n\r\nfunction EndPage() {\r\n  const game = useContext(GameContext);\r\n  return (\r\n    <Page href=\"/\" buttonText=\"Try again\" score={game.getCurrentGain()} />\r\n  );\r\n}\r\n\r\nexport default EndPage;\r\n","import configData from '../config/newConfig.json';\r\n\r\nconst data = configData;\r\n\r\nexport { data as default };\r\n","import data from './data';\r\n\r\nclass Game {\r\n  _FINAL_LEVEL = Object.keys(data).length - 1;\r\n\r\n  _userLevel;\r\n\r\n  _currentQuestion;\r\n\r\n  _userGain;\r\n\r\n  _questionsData;\r\n\r\n  constructor() {\r\n    this._userLevel = 0;\r\n    this._userGain = 0;\r\n    this._questionsData = data;\r\n  }\r\n\r\n  startGame() {\r\n    this._currentQuestion = this._generateQuestion(this._userLevel);\r\n  }\r\n\r\n  getCurrentLevel() {\r\n    return this._userLevel;\r\n  }\r\n\r\n  getCurrentQuestion() {\r\n    return this._currentQuestion;\r\n  }\r\n\r\n  getCurrentGain() {\r\n    return this._userGain;\r\n  }\r\n\r\n  getAllGainLevels() {\r\n    return Object.values(this._questionsData).map((el) => el.gain).reverse();\r\n  }\r\n\r\n  getFutureGain() {\r\n    const levelId = `level${this._userLevel}`;\r\n    return this._questionsData[levelId].gain;\r\n  }\r\n\r\n  _generateQuestion() {\r\n    const levelId = `level${this._userLevel}`;\r\n\r\n    const currentLevelQuestions = this._questionsData[levelId].questions;\r\n\r\n    return currentLevelQuestions[Math.floor(Math.random() * currentLevelQuestions.length)];\r\n  }\r\n\r\n  verifyAnswer(userAnswerId) {\r\n    const answerGain = this._currentQuestion.gain;\r\n    const correctAnswerIdArray = this._currentQuestion.correctAnswersIdArray;\r\n\r\n    let message;\r\n\r\n    if (correctAnswerIdArray.includes(userAnswerId)) {\r\n      this._userGain = answerGain;\r\n\r\n      if (this._userLevel === this._FINAL_LEVEL) {\r\n        message = 'Victory';\r\n      } else {\r\n        this._userLevel += 1;\r\n        this._currentQuestion = this._generateQuestion(this._userLevel);\r\n        message = 'Answer';\r\n      }\r\n    } else {\r\n      message = 'Loose';\r\n    }\r\n\r\n    return message;\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.scss';\r\nimport StartPage from './containers/StartPage';\r\nimport PlayPage from './containers/PlayPage';\r\nimport EndPage from './containers/EndPage';\r\nimport GameContext from './context/context';\r\nimport Game from './game/game';\r\n\r\nfunction App() {\r\n  return (\r\n    <GameContext.Provider value={new Game()}>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={StartPage} />\r\n          <Route path=\"/game-play\" exact component={PlayPage} />\r\n          <Route path=\"/game-end\" exact component={EndPage} />\r\n        </Switch>\r\n      </Router>\r\n    </GameContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}